<template>
  <div class="user-permission-list" :gutter="30">
    <el-tree :data="allPermission" :style="{height:boxHeight}" :props="defaultProps" default-expand-all :render-content="renderContent"></el-tree>
  </div>
</template>
<script lang="ts">
import Vue from 'vue'
import { Component, Inject, Watch } from 'vue-property-decorator'
import { State, Getter, Action } from 'vuex-class'
import permissionEdit from './permissionEdit.vue'
import API from '../../../API'
@Component( {
  name: 'permission-list',
  components: {
    permissionEdit
  }
} )
export default class PermissionList extends Vue {
  @Getter( 'permission/getterPermissionAll' ) allPermission
  @Action( 'permission/getPermissionAll' ) getPermissionAll
  defaultProps = {
    children: 'children',
    label: 'permissionName'
  }
  // treeKey: number = Math.random()
  // @Watch('allPermission', { deep: true })
  // allPermissionWatcher() {
  //   this.treeKey = Math.random()
  // }
  created () {
    this.getPermissionAll()
  }

  @State( 'clientHeight' ) clientHeight
  get boxHeight () {
    return this.clientHeight - 190 + 'px'
  }
  renderContent ( h, { node, data, store } ) {
    const that = this;
    return h( 'span', [
      h( 'span', { domProps: { innerHTML: data.permissionName } } ),
      h( 'el-button', {
        domProps: { innerHTML: '编辑' }, attrs: { size: 'mini', class: 'pull-right update el-button el-button--text' },
        on: {
          'click': function ( $event ) {
            $event.stopPropagation();
            that.updatePermission( data )
          }
        }
      } ),
      data.grade === 1 ? '' : h( 'el-button', {
        domProps: { innerHTML: '删除' }, attrs: { size: 'mini', class: 'pull-right delete  el-button el-button--text' },
        on: {
          'click': function ( $event ) {
            $event.stopPropagation()
            that.confirmPermission( data )
          }
        }
      } )
    ] )
  }
  updatePermission ( data ) {
    this.$emit( 'edit-permission', data )
  }
  confirmPermission ( obj ) {
    this.$confirm( '是否删除权限[' + obj.permissionName + ']', '提示', {
      confirmButtonText: '确定',
      cancelButtonText: '取消',
      type: 'warning'
    } ).then( () => {
      this.deletePermission( obj )
    } )
  }

  deletePermission ( obj ) {
    this.$http( API.permissionDelete2, {
      id: obj.id + '',
      broadcast: true
    } ).then( ( { data } ) => {
      this.getPermissionAll( true )
    } )
  }
}
</script>
<style lang="stylus" >
.user-permission-list {
  .el-tree {
    overflow: auto;

    .el-tree-node__content {
      padding-right: 20px;

      &:hover {
        .update, .delete {
          display: block;
        }
      }
    }
  }

  .update, .delete {
    display: none;
  }
}
</style>

